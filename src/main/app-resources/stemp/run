#!/bin/bash

# source the ciop functions (e.g. ciop-log, ciop-getparam)
source ${ciop_job_include}

# define the exit codes
SUCCESS=0
ERR_INPUT=10
ERR_RAS=20
ERR_AOI=30
ERR_PUBLISH=40
# add a trap to exit gracefully
function cleanExit () {

  local retval=$?
  local msg=""

  case "$retval" in
    $SUCCESS) msg="Processing successfully concluded";;
    $ERR_INPUT) msg="Wrong input. Input data must be L8 or ASTER";;
    $ERR_RAS) msg="Athmosferic profile is not available";;
    $ERR_AOI) msg="The selected input file does not contain a correct area to be processed";;
    $ERR_PUBLISH) msg="Failed results publish";;
    *) msg="Unknown error";;
  esac
  [ "$retval" != "0" ] && ciop-log "ERROR" "Error $retval - $msg, processing aborted" || ciop-log "INFO" "$msg"
  exit $retval
}

trap cleanExit EXIT

get_data() {
  local ref=$1
  local target=$2
  local local_file
  local enclosure
  local res

  [ "${ref:0:4}" == "file" ] || [ "${ref:0:1}" == "/" ] && enclosure=${ref}

  [ -z "$enclosure" ] && enclosure=$( opensearch-client "${ref}" enclosure ) 
  res=$?
  enclosure=$( echo ${enclosure} | tail -1 )
  [ $res -eq 0 ] && [ -z "${enclosure}" ] && return ${ERR_GETDATA}
  [ $res -ne 0 ] && enclosure=${ref}

  local_file="$( echo ${enclosure} | ciop-copy -f -U -O ${target} - 2> /dev/null )"
  res=$?
  [ ${res} -ne 0 ] && return ${res}
  echo ${local_file}
}


function main(){

  # prepare STEMP environment
  
  # stage-in inputs
  # input_file=$( get_data ${1} ${TMPDIR}/PROCESSING )
  
  #esport IDL variable
  export LM_LICENSE_FILE=1700@idl.terradue.int
  export MODTRAN_BIN=/opt/MODTRAN-5.4.0/
  export PROCESSING_HOME=${TMPDIR}/PROCESSING
  mkdir -p ${PROCESSING_HOME}

  # temporary
  cp /data/code/PROCESSING/file_input.cfg ${PROCESSING_HOME}
  # invoke the app with the local staged data
  STEMP_BIN=/data/code/STEMP-1.0
  /usr/local/bin/idl -rt=${STEMP_BIN}/STEMP.sav
  
  # stage-out the results
  ciop-publish -m /data/code/PROCESSING/*TEMP.tif || return $?
}


while read input
do
    main ${input}
    res=$?
    [ "${res}" != "0" ] && exit ${res}
done

exit ${SUCCESS}
