#!/bin/bash

# source the ciop functions (e.g. ciop-log, ciop-getparam)
source ${ciop_job_include}

# define the exit codes
SUCCESS=0
ERR_INPUT=10
ERR_RAS=20
ERR_AOI=30
ERR_PUBLISH=40
# add a trap to exit gracefully
function cleanExit () {

  local retval=$?
  local msg=""

  case "$retval" in
    $SUCCESS) msg="Processing successfully concluded";;
    $ERR_INPUT) msg="Wrong input. Input data must be L8 or ASTER";;
    $ERR_RAS) msg="Athmosferic profile is not available";;
    $ERR_AOI) msg="The selected input file does not contain a correct area to be processed";;
    $ERR_PUBLISH) msg="Failed results publish";;
    *) msg="Unknown error";;
  esac
  [ "$retval" != "0" ] && ciop-log "ERROR" "Error $retval - $msg, processing aborted" || ciop-log "INFO" "$msg"
  exit $retval
}

trap cleanExit EXIT

function main(){

  # prepare STEMP environment
  
  # stage-in inputs
  # input_file=$( get_data ${1} ${TMPDIR}/PROCESSING )
  
  export LM_LICENSE_FILE=1700@idl.terradue.int
  export MODTRAN_BIN=/opt/MODTRAN-5.4.0/
  export STEMP_BIN=/data/code/STEMP-1.0
  export PROCESSING_HOME=/tmp/mytest
  #export PROCESSING_HOME=${TMPDIR}/PROCESSING
  #mkdir -p ${PROCESSING_HOME}
  #mkdir -p ${TMPDIR}/INPUT_SRF
  #cp /data/code/PROCESSING_24mag/*  ${PROCESSING_HOME}
  #cp /data/code/INPUT_SRF/* ${TMPDIR}/INPUT_SRF
  #cp /data/code/PROCESSING/file_input.cfg ${PROCESSING_HOME}
  
  # invoke the STEMP processor
  /usr/local/bin/idl -rt=${STEMP_BIN}/run_modtran.sav -IDL_DEVICE Z
  
  # create quicklooks
  cd ${PROCESSING_HOME}
  string_inp=$(head -n 1 file_input.cfg)
  leng=${#string_inp}
  gdal_translate -scale -10 10 0 255 -ot Byte -of PNG ${string_inp:0:leng-4}_TEMP.tif ${string_inp:0:leng-4}_TEMP.png
  listgeo -tfw ${string_inp:0:leng-4}_TEMP.tif
  mv ${string_inp:0:leng-4}_TEMP.tfw ${string_inp:0:leng-4}_TEMP.pngw
  
  # stage-out the results
  ciop-publish -m /data/code/PROCESSING/*TEMP.tif || return $?
  ciop-publish -m /data/code/PROCESSING/*TEMP.png* || return $?
}


while read input
do
    main ${input}
    res=$?
    [ "${res}" != "0" ] && exit ${res}
done

exit ${SUCCESS}
